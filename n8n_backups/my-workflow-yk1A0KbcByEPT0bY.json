{"createdAt":"2025-02-28T09:44:28.862Z","updatedAt":"2025-02-28T09:50:38.000Z","id":"yk1A0KbcByEPT0bY","name":"My workflow","active":false,"nodes":[{"parameters":{},"id":"784289c5-e7a4-4b2c-89f5-e7acac214742","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-580,-160],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"8162f20b-e9c6-48ee-8126-087abaaa59b0","name":"n8n","type":"n8n-nodes-base.n8n","position":[-180,-60],"typeVersion":1},{"parameters":{"options":{}},"id":"ceaaf9e3-cc36-4d86-8214-aaa5ac4c53fe","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[40,-100],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"0fdbb077-1c90-431a-a9dd-d3dff7979c66","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-580,40],"typeVersion":1.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"a4810473-f8c0-4cf8-a459-349b1a11f79f","name":"Starting Message","type":"n8n-nodes-base.slack","position":[-340,-60],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"a50810a5-aaff-4b0a-ab76-0c48c69bb993","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-920,300],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"0d28b60d-ae72-49d3-94cf-cdc62e2f2f4a","name":"Return","type":"n8n-nodes-base.set","position":[800,500],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"07a4e300-25f0-48b4-9ca0-976bed8a490e","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[-240,380],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"b128e60d-fde7-4b1a-90ed-b0965d933ca1","name":"If file too large","type":"n8n-nodes-base.if","position":[-480,400],"typeVersion":2},{"parameters":{},"id":"21f6e4d6-62d9-4735-8ed7-beba5faf622b","name":"Merge Items","type":"n8n-nodes-base.merge","position":[-480,680],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"850c92bd-3e6f-4030-b41d-ea05ef43d864","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[-280,660],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"f1bf7b3d-c6c2-410d-baa5-616c57185bea","name":"Check Status","type":"n8n-nodes-base.switch","position":[120,660],"typeVersion":1},{"parameters":{},"id":"568e5445-4111-4475-9c35-163f9d55ef24","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[340,500],"typeVersion":1},{"parameters":{},"id":"1bbb18f9-3667-446e-b910-aae671502611","name":"File is different","type":"n8n-nodes-base.noOp","position":[340,660],"typeVersion":1},{"parameters":{},"id":"ea07fee1-7bf4-41b0-a039-dcf4cc22791c","name":"File is new","type":"n8n-nodes-base.noOp","position":[340,860],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"7bb77105-1ea5-4572-b852-81ee3554feb7","name":"Create new file","type":"n8n-nodes-base.github","position":[560,860],"typeVersion":1},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"5b7b49c4-94ad-4738-af16-c689b319073f","name":"Edit existing file","type":"n8n-nodes-base.github","position":[560,660],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"e26c31c2-0cf4-4437-91d3-75b8d5edf822","name":"Create sub path","type":"n8n-nodes-base.set","position":[-80,660],"typeVersion":3.3},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Loop Over Items').first().json.createdAt.split('-')[0] }}/{{ $('Loop Over Items').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"c8e2bc61-a475-4560-a5fc-4a74b9a46156","name":"Get file data","type":"n8n-nodes-base.github","position":[-680,400],"typeVersion":1,"alwaysOutputData":true,"credentials":{"githubOAuth2Api":{"id":"aTAzivenNUt4tSCJ","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=kapellaz"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=n8n_gcp"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=https://github.com/kapellaz/n8n_gcp"}]},"includeOtherFields":true,"options":{}},"id":"40ca4df7-9e27-4c71-ab4d-0740ed90ee00","name":"Config","type":"n8n-nodes-base.set","position":[-860,680],"typeVersion":3.4}],"connections":{"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Loop Over Items","type":"main","index":0},{"node":"Config","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"673f1bf9-e408-4946-ac8d-3cea89571fb8","triggerCount":0,"tags":[]}